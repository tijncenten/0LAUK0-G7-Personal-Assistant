package pma.gui;

import java.awt.Color;
import java.awt.Dimension;
import java.awt.GridBagConstraints;
import java.awt.GridBagLayout;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.text.ParseException;
import java.util.List;
import java.util.Random;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.BoxLayout;
import javax.swing.JCheckBox;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import pma.PersonalMessagingAssistant;
import pma.PersonalMessagingAssistant.EvalResult;
import pma.chatparsers.MessageParser;
import pma.feedback.FeedbackEvaluator;
import pma.message.Message;

/**
 *
 * @author Emre Aydogan
 * 
 * A GUI that shows the different features of the PA, such as the chat it
 * analyzes and the scoring that is given to some thread.
 *
 */
public class GUI extends javax.swing.JFrame {
    
    private File selectedFile;
    private PersonalMessagingAssistant pa;
    private MessageParser mp;
    private int batchSize = 200;
    
    private Message feedbackMessage;
    
    //private JMessageList messageList = new JMessageList();

    /**
     * Creates new form GUI
     */
    public GUI() {
        initComponents();
        feedbackFrame.setList(feedbackList);
        //jCenterPanel.add(messageList);
        
        jMessageList.setMessageSelectedListener((m) -> {
            updateSelectedMessageInfo(m);
        });
        
        mp = new MessageParser();
        pa = new PersonalMessagingAssistant(mp, batchSize);
        pa.setFeedbackEvaluator((FeedbackEvaluator) feedbackFrame);
        pa.load("", "emre-es3");
    }
    
    private void updateSelectedMessageInfo(Message m) {
        jLabelMessageSender.setText(m.getSender().toString());
        jLabelMessageText.setText("<html>" + m.getText() + "</html>");
        feedbackMessage = m;
    }
    
    private void clearUI() {
        feedbackMessage = null;
        jLabelResults.setText("Results of chat evaluation will be shown here ...");
        jLabelMessageSender.setText("...");
        jLabelMessageText.setText("Message ...");
        jProgressBar1.setValue(0);
        jMessageList.clear();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDialog1 = new javax.swing.JDialog();
        jCheckBox3 = new javax.swing.JCheckBox();
        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel2 = new javax.swing.JPanel();
        feedbackFrame = new pma.gui.FeedbackFrame();
        feedbackList = new pma.gui.JFeedbackList();
        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jHideSpamCheckbox = new javax.swing.JCheckBox();
        jCheckBox2 = new javax.swing.JCheckBox();
        jCenterPanel = new javax.swing.JPanel();
        jMessageList = new pma.gui.JMessageList();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabelResults = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        score = new javax.swing.JLabel();
        jProgressBar1 = new javax.swing.JProgressBar();
        jButtonFeedback = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabelMessageSender = new javax.swing.JLabel();
        jLabelMessageText = new javax.swing.JLabel();

        jCheckBox3.setSelected(true);
        jCheckBox3.setText("Chat analysis complete");

        javax.swing.GroupLayout jDialog1Layout = new javax.swing.GroupLayout(jDialog1.getContentPane());
        jDialog1.getContentPane().setLayout(jDialog1Layout);
        jDialog1Layout.setHorizontalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialog1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jCheckBox3, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jDialog1Layout.setVerticalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialog1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jCheckBox3, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        feedbackFrame.setAlwaysOnTop(true);
        feedbackFrame.setLocation(new java.awt.Point(0, 0));
        feedbackFrame.setMinimumSize(new java.awt.Dimension(800, 600));

        javax.swing.GroupLayout feedbackFrameLayout = new javax.swing.GroupLayout(feedbackFrame.getContentPane());
        feedbackFrame.getContentPane().setLayout(feedbackFrameLayout);
        feedbackFrameLayout.setHorizontalGroup(
            feedbackFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(feedbackList, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE)
        );
        feedbackFrameLayout.setVerticalGroup(
            feedbackFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(feedbackList, javax.swing.GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton1.setText("Import Chat");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Run PA on chat");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jHideSpamCheckbox.setSelected(true);
        jHideSpamCheckbox.setText("Hide spam");
        jHideSpamCheckbox.setToolTipText("Whether you want to only show the notification worthy messages");
        jHideSpamCheckbox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jHideSpamCheckboxActionPerformed(evt);
            }
        });

        jCheckBox2.setText("Neural Network");
        jCheckBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jCenterPanelLayout = new javax.swing.GroupLayout(jCenterPanel);
        jCenterPanel.setLayout(jCenterPanelLayout);
        jCenterPanelLayout.setHorizontalGroup(
            jCenterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jMessageList, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jCenterPanelLayout.setVerticalGroup(
            jCenterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jMessageList, javax.swing.GroupLayout.DEFAULT_SIZE, 423, Short.MAX_VALUE)
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel1.setText("Results:");

        jLabelResults.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jLabelResults.setText("Results of chat evaluation will be shown here ...");
        jLabelResults.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        jLabelResults.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jLabelResults.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelResults, javax.swing.GroupLayout.DEFAULT_SIZE, 383, Short.MAX_VALUE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabelResults, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        score.setText("Score");

        jButtonFeedback.setText("Give Feedback");
        jButtonFeedback.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonFeedbackActionPerformed(evt);
            }
        });

        jLabel2.setText("Sender:");

        jLabelMessageSender.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jLabelMessageSender.setText("...");

        jLabelMessageText.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jLabelMessageText.setText("Message ...");
        jLabelMessageText.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabelMessageSender, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonFeedback))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addComponent(score)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jProgressBar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jLabelMessageText, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButtonFeedback)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel2)
                        .addComponent(jLabelMessageSender)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabelMessageText, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jProgressBar1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(score, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 227, Short.MAX_VALUE)
                .addComponent(jHideSpamCheckbox)
                .addGap(36, 36, 36)
                .addComponent(jCheckBox2)
                .addGap(84, 84, 84)
                .addComponent(jButton2)
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jCenterPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jHideSpamCheckbox)
                    .addComponent(jCheckBox2)
                    .addComponent(jButton2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCenterPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jCheckBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox2ActionPerformed

    private void jHideSpamCheckboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jHideSpamCheckboxActionPerformed
        // TODO add your handling code here:
        jMessageList.setHideSpam(jHideSpamCheckbox.isSelected());
    }//GEN-LAST:event_jHideSpamCheckboxActionPerformed

    /** 
     * The handler for the 'run' button. 
     * 
     * This button is pressed when the user wants to proceed to the analyzing
     * of some chat
     */
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed

        EvalResult[] results = null;

        try {
            /**
            * This button does 2 things for now:
            *
            * 1. Show a random fake score that was assigned to the chat/thread
            * 2. Show a fake popup dialog that confirms the analysis has been
            * completed
            */

            results = pa.process(selectedFile);
            jMessageList.setResults(results);
            List<Message> outputMessages = pa.getLastOutputMessages();
            int[] threadIndices = new int[outputMessages.size()];
            for (int i = 0; i < outputMessages.size(); i++) {
                threadIndices[i] = outputMessages.get(i).getThreadIndex();
            }
            jMessageList.setThreads(threadIndices);
            
            int[] stats = PersonalMessagingAssistant.calculateStatistics(outputMessages);
            int TP = stats[0];
            int TN = stats[1];
            int FP = stats[2];
            int FN = stats[3];
            int CT = stats[4];
            String statisticsString = "<html>";
            statisticsString += String.format("TP: %d  FP: %d<br/>", TP, FP);
            statisticsString += String.format("FN: %d  TN: %d<br/>", FN, TN);
            statisticsString += String.format("Total: %d<br/>", CT);
            statisticsString += String.format("Precision: %.2f Recall: %.2f<br/>", TP * 1. / (TP+FP), TP * 1. / (TP + FN));
            statisticsString += String.format("Specificity: %.2f Accuracy: %.2f", TN * 1. / (FP+TN), (TP + TN) * 1. / CT);
            statisticsString += "</html>";
            jLabelResults.setText(statisticsString);

        } catch (ParseException | FileNotFoundException ex) {
            ex.printStackTrace();
        }

        // 1. Show random fake score in the main GUI
        Random r = new Random();
        int threadScore = r.nextInt(101); // score has scale 0 - 100

        // add all buttons to a group such that only 1 button at a time
        // can be selected
//        buttonGroup1.add(jRadioButton1);
//        buttonGroup1.add(jRadioButton2);
//        buttonGroup1.add(jRadioButton3);

        // check one of the three labeled radio buttons
        jProgressBar1.setValue(threadScore);
//        if (threadScore <= 33) {
//            jRadioButton1.setSelected(true);
//        } else if (threadScore <= 67) {
//            jRadioButton2.setSelected(true);
//        } else {
//            jRadioButton3.setSelected(true);
//        }

        // 2. Show the popup dialog
        jDialog1.setVisible(true);
        jDialog1.setBounds(300, 300, 200, 80);

    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    // upon clicking the jButton labeled import chat,  search for the 
    // .txt file you want to analyse
    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
        // choose file through the OS file manager
        JFileChooser fc = new JFileChooser();
        int ret = fc.showOpenDialog(this);
        if (ret == JFileChooser.APPROVE_OPTION) {
            selectedFile = fc.getSelectedFile();

            clearUI();
            
            try {
                List<Message> messages = mp.parse(selectedFile);
                for (Message m : messages) {
                    jMessageList.addMessage(m);
                }

                /*
                BufferedReader br = null;
                // add each line in the retrieved .txt file to a StringBuilder object
                try {
                    br = new BufferedReader(new FileReader(f));
                    StringBuilder sb = new StringBuilder();
                    String line = br.readLine();

                    // continue adding lines until no lines are left
                    while (line != null) {
                        sb.append(line);
                        sb.append(System.lineSeparator());
                        line = br.readLine();
                    }

                    // call toString on the stringbuilder and print the entire .txt
                    // in the jTextArea
                    String all = sb.toString();
                    jTextArea1.setText(all);

                } catch (IOException e) {
                } finally {
                    try {
                        br.close();
                    } catch (IOException e) {

                    }
                }
                */
            } catch (ParseException | FileNotFoundException ex) {
                ex.printStackTrace();
            }
        }

    }//GEN-LAST:event_jButton1MouseClicked

    private void jButtonFeedbackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonFeedbackActionPerformed
        if (feedbackMessage == null) {
            return;
        }
        System.err.println("TODO: Requesting feedback for message: " + feedbackMessage);
    }//GEN-LAST:event_jButtonFeedbackActionPerformed
        
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private pma.gui.FeedbackFrame feedbackFrame;
    private pma.gui.JFeedbackList feedbackList;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButtonFeedback;
    private javax.swing.JPanel jCenterPanel;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JCheckBox jCheckBox3;
    private javax.swing.JDialog jDialog1;
    private javax.swing.JCheckBox jHideSpamCheckbox;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabelMessageSender;
    private javax.swing.JLabel jLabelMessageText;
    private javax.swing.JLabel jLabelResults;
    private pma.gui.JMessageList jMessageList;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JProgressBar jProgressBar1;
    private javax.swing.JLabel score;
    // End of variables declaration//GEN-END:variables
}
